plugins {
	id 'java-library'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'maven-publish'
}

group = 'com.halowing.lib'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
	withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'halowing-spring-lib'
            from components.java
            versionMapping {
            	usage('java-api') {
            		fromResolutionOf('runtimeClasspath')
            	}
            	usage('java-runtime') {
            		fromResolutionResult()
            	}
            }
            pom {
            	name = 'HALOWING WEB LIBRARY.'
            	description = 'Utilities for web Application maded by halowing.'
            	url = 'https://github.com/halowing/halowing-spring-lib'
            	licenses{
            		name = 'Apache License, Version 2.0'
                  	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            	}
            	developers {
            		developer {
            			id = 'halowing'
            			name = 'Seonggeun Kim'
            			email = 'sgkim@halowing.com'
            		}
            	}
            } 
        }
        
        gpr(MavenPublication) {
        	from components.java
        }
    }
    
    repositories {
   		maven {
   			name = "GitHubPacakges"
    		url = uri("https://maven.pkg.github.com/halowing/halowing-spring-lib") 
    		credentials {
    			username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
    			password = project.findProperty("gpr.key")  ?: System.getenv("TOKEN")
    		}
    	}
    }
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://maven.pkg.github.com/halowing/halowing-base-lib")
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
			password = project.findProperty("gpr.key")  ?: System.getenv("TOKEN")
		}
	}
	maven {
		url = uri("https://maven.pkg.github.com/halowing/halowing-network-lib")
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
			password = project.findProperty("gpr.key")  ?: System.getenv("TOKEN")
		}
	}
	
	
}

dependencies {
	compileOnly 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.springframework.boot:spring-boot-starter-validation'
	
	compileOnly 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	
	compileOnly 'com.halowing.lib:halowing-base-lib:0.0.1-SNAPSHOT'
	compileOnly 'com.halowing.lib:halowing-network-lib:0.0.1-SNAPSHOT'
	
	testImplementation 'ch.qos.logback:logback-classic:1.3.11'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
